@startuml
hide empty description
Image: ArUco Marker included
state Result {
    state "The 2D position of four corners each marker" as long1{
    }
    state "The id of the marker" as long2{
    }
    
    
}

state Candidate {
    Image ---> Thresholded_Image: Adaptive_Thresholding
    Thresholded_Image: Contours
    Thresholded_Image ---> Candidate_Contours: Filtering
    Candidate_Contours -> long1
}

state Analyzing_Inner_Codification {
    Candidate_Contours -> Candidate_Marker
    Candidate_Marker ---> Perspective_Distorted_Image
    Perspective_Distorted_Image ---> Black_White_Pixelated_Image: Otsu_Thresholding
    Black_White_Pixelated_Image ---> long2: Counting_Black_and_White_Pixels
}

state Camera_calibraiton {
    A_known_pattern: Chessboards
    A_known_pattern ---> Images_with_multiple_viewpoints
    Images_with_multiple_viewpoints ---> 2D_pixel_coordinates: detect_patterns_corner
    2D_pixel_coordinates --> Real_word_3d_coordinate_of_corner: Define
    Correspondences_2D_3D_mapping: cv2.calibrateCamera()
    Real_word_3d_coordinate_of_corner --> Correspondences_2D_3D_mapping
    
    state Output_params {
        state camera_marix_coefficients
        state distortion_coefficients
    }
    Correspondences_2D_3D_mapping --> Output_params
}

state pose_estimation {
    long1 --> 3D_object_point: Define
    3D_object_point --> Match_2D_3D_points
    
    Match_2D_3D_points --> PnP_Pose_estimation
    Output_params --> PnP_Pose_estimation
    PnP_Pose_estimation -> Output_results
    Output_results -> Visulization: cv2.drawFrameAxes()
    

    state Output_results {
        state rvec
        state tvec
    }

}

@enduml